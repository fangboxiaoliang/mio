// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import command "hidevops.io/mio/console/pkg/command"
import mock "github.com/stretchr/testify/mock"
import v1 "k8s.io/api/core/v1"

// SecretAggregate is an autogenerated mock type for the SecretAggregate type
type SecretAggregate struct {
	mock.Mock
}

// Create provides a mock function with given fields: secret
func (_m *SecretAggregate) Create(secret *command.Secret) error {
	ret := _m.Called(secret)

	var r0 error
	if rf, ok := ret.Get(0).(func(*command.Secret) error); ok {
		r0 = rf(secret)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: name, namespace
func (_m *SecretAggregate) Get(name string, namespace string) (*v1.Secret, error) {
	ret := _m.Called(name, namespace)

	var r0 *v1.Secret
	if rf, ok := ret.Get(0).(func(string, string) *v1.Secret); ok {
		r0 = rf(name, namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.Secret)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(name, namespace)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
